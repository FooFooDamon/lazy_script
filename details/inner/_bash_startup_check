#!/bin/bash

#
# _bash_startup_check.sh
#
#  Created on: 2018-05-28
#
#      Author: WenXiongchang (udc577@126.com)
#
# Description: For checking during bash initialization.
#
#       Usage: This script should be used by inner modules only.
#

if [ ! -f /bin/bash ]
then
	if [ -z "`which bash`" ]
	then
		lzerror "*** Bash not installed, please install it first!"
	else
		lzwarn "Bash not in the default directory, please execute command below manually to fix it:"
		lzwarn "sudo ln -s -f -n `which bash` /bin/bash"
	fi
fi

if [ ! -f /usr/bin/env ]
then
	if [ -z "`which env`" ]
	then
		lzerror "*** Program not installed: env"
		lzwarn "Please install it first!"
	else
		lzwarn "env not in the default directory, please execute command below manually to fix it:"
		lzwarn "sudo ln -s -f -n `which env` /usr/bin/env"
	fi
fi

for i in ${_NECESSARY_TOOLS[@]}
do
	warn_if_not_installed $i
done

for i in ${_NECESSARY_DIRS[@]}
do
	mkdir -p "$i"
done

[ -d $__LAZY_SCRIPT_HOME__/details/shortcuts ] || mkdir -p $__LAZY_SCRIPT_HOME__/details/shortcuts
find $__LAZY_SCRIPT_HOME__/details/ -name "*.sh" | while read i
do
	_shortcuts=$__LAZY_SCRIPT_HOME__/details/shortcuts/$(basename "$i" .sh)
	[ -f "$_shortcuts" ] || ln -s -f -n "$i" "$_shortcuts"
done

find "$__LAZY_SCRIPT_HOME__"/ -type f | grep -v "\.git\|\.svn" | xargs chmod +x

# Permits core file generation for programs
ulimit -c unlimited

# Disables copy functionality of the mouse middle button
if [ ! -f ~/.Xmodmap ]
then
	echo "pointer = 1 25 3 4 5 6 7 2" >> ~/.Xmodmap
fi

[ -f $__LAZY_SCRIPT_HOME__/details/shell_common.sh ] || ln -s -f -n $__LAZY_SCRIPT_HOME__/details/inner/_shell_common.sh $__LAZY_SCRIPT_HOME__/details/shell_common.sh

_PRIVATE_DIR=$__LAZY_SCRIPT_HOME__/details/private

#
# Private bashrc
#

_PRIVATE_BASHRC_FILES=(_bash_private_settings \
	_bash_private_startup_operations \
	_bash_private_tab_completions)

_PRIVATE_BASHRC_HINTS=("# Customize your variables, aliases and functions here.\n\n# export xx_var=xx\n\n# alias xx_alias=xx\n\n# xx_func()\n# {\n#\txx\n# }\n" \
	"# Customize your operations on startup here.\n\n# xx_command\n" \
	"# Customize your tab completions here.\n\n# complete -W \"tab completion word list for xx_command\" \"xx_command\"\n\n# set_tab_completion yy_command \"tab completion word list for yy_command\"\n")

_PRIVATE_BASHRC_COUNT=${#_PRIVATE_BASHRC_FILES[*]}

if [ ! -f "$_PRIVATE_DIR/_bash_private" ]
then
	echo -e "#!/bin/bash\n" > "$_PRIVATE_DIR/_bash_private"
	echo "#" >> "$_PRIVATE_DIR/_bash_private"
	echo "# This file was generated by Lazy-script." >> "$_PRIVATE_DIR/_bash_private"
	echo "# DO NOT edit it, but you should edit sub-files below to meet your needs." >> "$_PRIVATE_DIR/_bash_private"
	echo -e "#\n" >> "$_PRIVATE_DIR/_bash_private"
fi

for i in ${_PRIVATE_BASHRC_FILES[@]}
do
	if [ `grep "$i" "$_PRIVATE_DIR/_bash_private" -c` -gt 0 ]
	then
		continue
	fi

	if [ "$i" = "_bash_private_settings" ]
	then
		echo "source \"\$LAZY_SCRIPT_HOME/details/private/$i\"" >> "$_PRIVATE_DIR/_bash_private"
	else
		echo "[ \"\$1\" == \"-a\" ] && source \"\$LAZY_SCRIPT_HOME/details/private/$i\"" >> "$_PRIVATE_DIR/_bash_private"
	fi
done

for i in `seq 0 $(($_PRIVATE_BASHRC_COUNT - 1))`
do
	_private_bashrc_item="$_PRIVATE_DIR/${_PRIVATE_BASHRC_FILES[$i]}"
	if [ ! -f "$_private_bashrc_item" ]
	then
		echo -e "#!/bin/bash\n" > "$_private_bashrc_item"
		echo "#" >> "$_private_bashrc_item"
		echo "# This file was generated by Lazy-script." >> "$_private_bashrc_item"
		echo "# Feel free to edit it to meet your needs." >> "$_private_bashrc_item"
		echo -e "#\n" >> "$_private_bashrc_item"
		echo -e "${_PRIVATE_BASHRC_HINTS[$i]}" >> "$_private_bashrc_item"
	fi
done

#
# For vim
#

if [ ! -f $_PRIVATE_DIR/vim/vimrc.private ]
then
	echo "\"" > $_PRIVATE_DIR/vim/vimrc.private
	echo "\" Put your own configurations in this file." >> $_PRIVATE_DIR/vim/vimrc.private
	echo "\"" >> $_PRIVATE_DIR/vim/vimrc.private
fi

[ -f $VIMRC ] || touch $VIMRC
[ `grep "vimrc\.public" $VIMRC -c` -gt 0 ] || echo "source \$LAZY_SCRIPT_HOME/details/etc/vimrc.public" >> $VIMRC
[ `grep "vimrc\.private" $VIMRC -c` -gt 0 ] || echo "source \$LAZY_SCRIPT_HOME/details/private/vim/vimrc.private" >> $VIMRC

